{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "UmbracoCmsSchema",
  "type": "object",
  "properties": {
    "Umbraco": {
      "$ref": "#/definitions/UmbracoDefinition"
    }
  },
  "definitions": {
    "UmbracoDefinition": {
      "type": "object",
      "description": "Configuration container for all Umbraco products.",
      "properties": {
        "CMS": {
          "$ref": "#/definitions/UmbracoCmsDefinition"
        }
      }
    },
    "UmbracoCmsDefinition": {
      "type": "object",
      "description": "Configuration of Umbraco CMS.",
      "properties": {
        "Content": {
          "$ref": "#/definitions/ContentSettings"
        },
        "Debug": {
          "$ref": "#/definitions/CoreDebugSettings"
        },
        "ExceptionFilter": {
          "$ref": "#/definitions/ExceptionFilterSettings"
        },
        "ModelsBuilder": {
          "$ref": "#/definitions/ModelsBuilderSettings"
        },
        "Global": {
          "$ref": "#/definitions/GlobalSettings"
        },
        "HealthChecks": {
          "$ref": "#/definitions/HealthChecksSettings"
        },
        "Hosting": {
          "$ref": "#/definitions/HostingSettings"
        },
        "Imaging": {
          "$ref": "#/definitions/ImagingSettings"
        },
        "Examine": {
          "$ref": "#/definitions/IndexCreatorSettings"
        },
        "KeepAlive": {
          "$ref": "#/definitions/KeepAliveSettings"
        },
        "Logging": {
          "$ref": "#/definitions/LoggingSettings"
        },
        "NuCache": {
          "$ref": "#/definitions/NuCacheSettings"
        },
        "RequestHandler": {
          "$ref": "#/definitions/RequestHandlerSettings"
        },
        "Runtime": {
          "$ref": "#/definitions/RuntimeSettings"
        },
        "Security": {
          "$ref": "#/definitions/SecuritySettings"
        },
        "Tours": {
          "$ref": "#/definitions/TourSettings"
        },
        "TypeFinder": {
          "$ref": "#/definitions/TypeFinderSettings"
        },
        "WebRouting": {
          "$ref": "#/definitions/WebRoutingSettings"
        },
        "Plugins": {
          "$ref": "#/definitions/UmbracoPluginSettings"
        },
        "Unattended": {
          "$ref": "#/definitions/UnattendedSettings"
        },
        "RichTextEditor": {
          "$ref": "#/definitions/RichTextEditorSettings"
        },
        "RuntimeMinification": {
          "$ref": "#/definitions/RuntimeMinificationSettings"
        },
        "BasicAuth": {
          "$ref": "#/definitions/BasicAuthSettings"
        },
        "PackageMigration": {
          "$ref": "#/definitions/PackageMigrationSettings"
        },
        "LegacyPasswordMigration": {
          "$ref": "#/definitions/LegacyPasswordMigrationSettings"
        },
        "ContentDashboard": {
          "$ref": "#/definitions/ContentDashboardSettings"
        },
        "HelpPage": {
          "$ref": "#/definitions/HelpPageSettings"
        },
        "DefaultDataCreation": {
          "$ref": "#/definitions/InstallDefaultDataSettings"
        },
        "DataTypes": {
          "$ref": "#/definitions/DataTypesSettings"
        },
        "Marketplace": {
          "$ref": "#/definitions/MarketplaceSettings"
        }
      }
    },
    "ContentSettings": {
      "type": "object",
      "description": "Typed configuration options for content settings.\n            ",
      "properties": {
        "Notifications": {
          "description": "Gets or sets a value for the content notification settings.\n            ",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentNotificationSettings"
            }
          ]
        },
        "Imaging": {
          "description": "Gets or sets a value for the content imaging settings.\n            ",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentImagingSettings"
            }
          ]
        },
        "ResolveUrlsFromTextString": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether URLs should be resolved from text strings.\n            ",
          "default": false
        },
        "Error404Collection": {
          "type": "array",
          "description": "Gets or sets a value for the collection of error pages.\n            ",
          "items": {
            "$ref": "#/definitions/ContentErrorPage"
          }
        },
        "PreviewBadge": {
          "type": "string",
          "description": "Gets or sets a value for the preview badge mark-up.\n            ",
          "default": "\n            <div id=\"umbracoPreviewBadge\" class=\"umbraco-preview-badge\">\n                <span class=\"umbraco-preview-badge__header\">Preview mode</span>\n                <a href=\"{0}/preview/?id={2}\" class=\"umbraco-preview-badge__a open\" title=\"Open preview in BackOffice\">\n                    â€¦\n                </a>\n                <a href=\"{0}/preview/end?redir={1}\" class=\"umbraco-preview-badge__a end\" title=\"End preview mode\">\n                    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\"><title>Click to end preview mode</title><path fill=\"#fff\" d=\"M5273.1 2400.1v-2c0-2.8-5-4-9.7-4s-9.7 1.3-9.7 4v2a7 7 0 002 4.9l5 4.9c.3.3.4.6.4 1v6.4c0 .4.2.7.6.8l2.9.9c.5.1 1-.2 1-.8v-7.2c0-.4.2-.7.4-1l5.1-5a7 7 0 002-4.9zm-9.7-.1c-4.8 0-7.4-1.3-7.5-1.8.1-.5 2.7-1.8 7.5-1.8s7.3 1.3 7.5 1.8c-.2.5-2.7 1.8-7.5 1.8z\"/><path fill=\"#fff\" d=\"M5268.4 2410.3c-.6 0-1 .4-1 1s.4 1 1 1h4.3c.6 0 1-.4 1-1s-.4-1-1-1h-4.3zM5272.7 2413.7h-4.3c-.6 0-1 .4-1 1s.4 1 1 1h4.3c.6 0 1-.4 1-1s-.4-1-1-1zM5272.7 2417h-4.3c-.6 0-1 .4-1 1s.4 1 1 1h4.3c.6 0 1-.4 1-1 0-.5-.4-1-1-1z\"/><path fill=\"#fff\" d=\"M78.2 13l-8.7 11.7a32.5 32.5 0 11-51.9 25.8c0-10.3 4.7-19.7 12.9-25.8L21.8 13a47 47 0 1056.4 0z\"/><path fill=\"#fff\" d=\"M42.7 2.5h14.6v49.4H42.7z\"/></svg>\n                </a>\n            </div>\n            <style type=\"text/css\">\n                .umbraco-preview-badge {{\n                    position: fixed;\n                    bottom: 0;\n                    display: inline-flex;\n                    background: rgba(27, 38, 79, 0.9);\n                    color: #fff;\n                    font-size: 12px;\n                    z-index: 99999999;\n                    justify-content: center;\n                    align-items: center;\n                    box-shadow: 0 5px 10px rgba(0, 0, 0, .2), 0 1px 2px rgba(0, 0, 0, .2);\n                    line-height: 1;\n                    pointer-events:none;\n                    left: 50%;\n                    transform: translate(-50%, 40px);\n                    animation: umbraco-preview-badge--effect 10s 1.2s ease both;\n                    border-radius: 3px 3px 0 0;\n                }}\n                @keyframes umbraco-preview-badge--effect {{\n                    0% {{\n                        transform: translate(-50%, 40px);\n                        animation-timing-function: ease-out;\n                    }}\n                    1.5% {{\n                        transform: translate(-50%, -20px);\n                        animation-timing-function: ease-in;\n                    }}\n                    5.0% {{\n                        transform: translate(-50%, -8px);\n                        animation-timing-function: ease-in;\n                    }}\n                    7.5% {{\n                        transform: translate(-50%, -4px);\n                        animation-timing-function: ease-in;\n                    }}\n                    9.2% {{\n                        transform: translate(-50%, -2px);\n                        animation-timing-function: ease-in;\n                    }}\n                    3.5%,\n                    6.5%,\n                    8.5% {{\n                        transform: translate(-50%, 0);\n                        animation-timing-function: ease-out;\n                    }}\n                    9.7% {{\n                        transform: translate(-50%, 0);\n                        animation-timing-function: ease-out;\n                    }}\n                    10.0% {{\n                        transform: translate(-50%, 0);\n                    }}\n\n\n                    60% {{\n                        transform: translate(-50%, 0);\n                        animation-timing-function: ease-out;\n                    }}\n                    61.5% {{\n                        transform: translate(-50%, -20px);\n                        animation-timing-function: ease-in;\n                    }}\n                    65.0% {{\n                        transform: translate(-50%, -8px);\n                        animation-timing-function: ease-in;\n                    }}\n                    67.5% {{\n                        transform: translate(-50%, -4px);\n                        animation-timing-function: ease-in;\n                    }}\n                    69.2% {{\n                        transform: translate(-50%, -2px);\n                        animation-timing-function: ease-in;\n                    }}\n                    63.5%,\n                    66.5%,\n                    68.5% {{\n                        transform: translate(-50%, 0);\n                        animation-timing-function: ease-out;\n                    }}\n                    69.7% {{\n                        transform: translate(-50%, 0);\n                        animation-timing-function: ease-out;\n                    }}\n                    70.0% {{\n                        transform: translate(-50%, 0);\n                    }}\n                    100.0% {{\n                        transform: translate(-50%, 0);\n                    }}\n                }}\n                .umbraco-preview-badge__header {{\n                    padding: 1em;\n                    font-weight: bold;\n                    pointer-events:none;\n                }}\n                .umbraco-preview-badge__a {{\n                    width: 3em;\n                    padding: 1em;\n                    display: flex;\n                    flex-shrink: 0;\n                    align-items: center;\n                    align-self: stretch;\n                    color:white;\n                    text-decoration:none;\n                    font-weight: bold;\n                    border-left: 1px solid hsla(0,0%,100%,.25);\n                    pointer-events:all;\n                }}\n                .umbraco-preview-badge__a svg {{\n                    width: 1em;\n                    height:1em;\n                }}\n                .umbraco-preview-badge__a:hover {{\n                    background: #202d5e;\n                }}\n                .umbraco-preview-badge__end svg {{\n                    fill: #fff;\n                    width:1em;\n                }}\n            </style>\n            <script type=\"text/javascript\" data-umbraco-path=\"{0}\" src=\"{0}/js/umbraco.websitepreview.min.js\"></script>"
        },
        "MacroErrors": {
          "description": "Gets or sets a value for the macro error behaviour.\n            ",
          "default": "Inline",
          "oneOf": [
            {
              "$ref": "#/definitions/MacroErrorBehaviour"
            }
          ]
        },
        "ShowDeprecatedPropertyEditors": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether deprecated property editors should be shown.\n            ",
          "default": false
        },
        "LoginBackgroundImage": {
          "type": "string",
          "description": "Gets or sets a value for the path to the login screen background image.\n            ",
          "default": "assets/img/login.svg"
        },
        "LoginLogoImage": {
          "type": "string",
          "description": "Gets or sets a value for the path to the login screen logo image.\n            ",
          "default": "assets/img/application/umbraco_logo_white.svg"
        },
        "HideBackOfficeLogo": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to hide the backoffice umbraco logo or not.\n            ",
          "default": false
        },
        "DisableDeleteWhenReferenced": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to disable the deletion of items referenced by other items.\n            ",
          "default": false
        },
        "DisableUnpublishWhenReferenced": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to disable the unpublishing of items referenced by other items.\n            ",
          "default": false
        },
        "ContentVersionCleanupPolicy": {
          "description": "Get or sets the model representing the global content version cleanup policy\n            ",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentVersionCleanupPolicySettings"
            }
          ]
        },
        "AllowEditInvariantFromNonDefault": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to allow editing invariant properties from a non-default language variation.",
          "default": false
        },
        "AllowedUploadedFileExtensions": {
          "type": "array",
          "description": "Gets or sets a value for the collection of file extensions that are allowed for upload.\n            ",
          "items": {
            "type": "string"
          }
        },
        "DisallowedUploadedFileExtensions": {
          "type": "array",
          "description": "Gets or sets a value for the collection of file extensions that are disallowed for upload.\n            ",
          "default": "ashx,aspx,ascx,config,cshtml,vbhtml,asmx,air,axd,xamlx",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ContentNotificationSettings": {
      "type": "object",
      "description": "Typed configuration options for content notification settings.\n            ",
      "properties": {
        "Email": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets a value for the email address for notifications.\n            "
        },
        "DisableHtmlEmail": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether HTML email notifications should be disabled.\n            ",
          "default": false
        }
      }
    },
    "ContentImagingSettings": {
      "type": "object",
      "description": "Typed configuration options for content imaging settings.\n            ",
      "properties": {
        "ImageFileTypes": {
          "type": "array",
          "description": "Gets or sets a value for the collection of accepted image file extensions.\n            ",
          "default": "jpeg,jpg,gif,bmp,png,tiff,tif,webp",
          "items": {
            "type": "string"
          }
        },
        "AutoFillImageProperties": {
          "type": "array",
          "description": "Gets or sets a value for the imaging autofill following media file upload fields.\n            ",
          "items": {
            "$ref": "#/definitions/ImagingAutoFillUploadField"
          }
        }
      }
    },
    "ImagingAutoFillUploadField": {
      "type": "object",
      "description": "Typed configuration options for image autofill upload settings.\n            ",
      "required": [
        "Alias",
        "WidthFieldAlias",
        "HeightFieldAlias",
        "LengthFieldAlias",
        "ExtensionFieldAlias"
      ],
      "properties": {
        "Alias": {
          "type": "string",
          "description": "Gets or sets a value for the alias of the image upload property.\n            ",
          "minLength": 1
        },
        "WidthFieldAlias": {
          "type": "string",
          "description": "Gets or sets a value for the width field alias of the image upload property.\n            ",
          "minLength": 1
        },
        "HeightFieldAlias": {
          "type": "string",
          "description": "Gets or sets a value for the height field alias of the image upload property.\n            ",
          "minLength": 1
        },
        "LengthFieldAlias": {
          "type": "string",
          "description": "Gets or sets a value for the length field alias of the image upload property.\n            ",
          "minLength": 1
        },
        "ExtensionFieldAlias": {
          "type": "string",
          "description": "Gets or sets a value for the extension field alias of the image upload property.\n            ",
          "minLength": 1
        }
      }
    },
    "ContentErrorPage": {
      "type": "object",
      "description": "Typed configuration for a content error page.\n            ",
      "required": [
        "Culture"
      ],
      "properties": {
        "ContentId": {
          "type": "integer",
          "description": "Gets or sets a value for the content Id.\n            ",
          "format": "int32"
        },
        "ContentKey": {
          "type": "string",
          "description": "Gets or sets a value for the content key.\n            ",
          "format": "guid"
        },
        "ContentXPath": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets a value for the content XPath.\n            "
        },
        "Culture": {
          "type": "string",
          "description": "Gets or sets a value for the content culture.\n            ",
          "minLength": 1
        }
      }
    },
    "MacroErrorBehaviour": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Inline",
        "Silent",
        "Throw",
        "Content"
      ],
      "enum": [
        "Inline",
        "Silent",
        "Throw",
        "Content"
      ]
    },
    "ContentVersionCleanupPolicySettings": {
      "type": "object",
      "description": "Model representing the global content version cleanup policy\n            ",
      "properties": {
        "EnableCleanup": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether or not the cleanup job should be executed.\n            ",
          "default": false
        },
        "KeepAllVersionsNewerThanDays": {
          "type": "integer",
          "description": "Gets or sets the number of days where all historical content versions are kept.\n            ",
          "format": "int32",
          "default": 7
        },
        "KeepLatestVersionPerDayForDays": {
          "type": "integer",
          "description": "Gets or sets the number of days where the latest historical content version for that day are kept.\n            ",
          "format": "int32",
          "default": 90
        }
      }
    },
    "CoreDebugSettings": {
      "type": "object",
      "description": "Typed configuration options for core debug settings.\n            ",
      "properties": {
        "LogIncompletedScopes": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether incompleted scopes should be logged.\n            ",
          "default": false
        },
        "DumpOnTimeoutThreadAbort": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether memory dumps on thread abort should be taken.\n            ",
          "default": false
        }
      }
    },
    "ExceptionFilterSettings": {
      "type": "object",
      "description": "Typed configuration options for exception filter settings.\n            ",
      "properties": {
        "Disabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the exception filter is disabled.\n            ",
          "default": false
        }
      }
    },
    "ModelsBuilderSettings": {
      "type": "object",
      "description": "Typed configuration options for models builder settings.\n            ",
      "properties": {
        "ModelsMode": {
          "description": "Gets or sets a value for the models mode.\n            ",
          "default": "InMemoryAuto",
          "oneOf": [
            {
              "$ref": "#/definitions/ModelsMode"
            }
          ]
        },
        "ModelsNamespace": {
          "type": "string",
          "description": "Gets or sets a value for models namespace.\n            ",
          "default": "Umbraco.Cms.Web.Common.PublishedModels"
        },
        "FlagOutOfDateModels": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether we should flag out-of-date models.\n            "
        },
        "ModelsDirectory": {
          "type": "string",
          "description": "Gets or sets a value for the models directory.\n            ",
          "default": "~/umbraco/models"
        },
        "AcceptUnsafeModelsDirectory": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to accept an unsafe value for ModelsDirectory.\n            ",
          "default": false
        },
        "DebugLevel": {
          "type": "integer",
          "description": "Gets or sets a value indicating the debug log level.\n            ",
          "format": "int32",
          "default": 0
        }
      }
    },
    "ModelsMode": {
      "type": "string",
      "description": "Defines the models generation modes.\n            ",
      "x-enumNames": [
        "Nothing",
        "InMemoryAuto",
        "SourceCodeManual",
        "SourceCodeAuto"
      ],
      "enum": [
        "Nothing",
        "InMemoryAuto",
        "SourceCodeManual",
        "SourceCodeAuto"
      ]
    },
    "GlobalSettings": {
      "type": "object",
      "description": "Typed configuration options for global settings.\n            ",
      "properties": {
        "ReservedUrls": {
          "type": "string",
          "description": "Gets or sets a value for the reserved URLs (must end with a comma).\n            ",
          "default": "~/.well-known,"
        },
        "ReservedPaths": {
          "type": "string",
          "description": "Gets or sets a value for the reserved paths (must end with a comma).\n            ",
          "default": "~/app_plugins/,~/install/,~/mini-profiler-resources/,~/umbraco/,"
        },
        "TimeOut": {
          "type": "string",
          "description": "Gets or sets a value for the back-office login timeout.\n            ",
          "format": "duration",
          "default": "00:20:00"
        },
        "DefaultUILanguage": {
          "type": "string",
          "description": "Gets or sets a value for the default UI language.\n            ",
          "default": "en-US"
        },
        "HideTopLevelNodeFromPath": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to hide the top level node from the path.\n            ",
          "default": true
        },
        "UseHttps": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether HTTPS should be used.\n            ",
          "default": false
        },
        "VersionCheckPeriod": {
          "type": "integer",
          "description": "Gets or sets a value for the version check period in days.\n            ",
          "format": "int32",
          "default": 7
        },
        "IconsPath": {
          "type": "string",
          "description": "Gets or sets a value for the Umbraco icons path.\n            ",
          "default": "umbraco/assets/icons"
        },
        "UmbracoCssPath": {
          "type": "string",
          "description": "Gets or sets a value for the Umbraco CSS path.\n            ",
          "default": "~/css"
        },
        "UmbracoScriptsPath": {
          "type": "string",
          "description": "Gets or sets a value for the Umbraco scripts path.\n            ",
          "default": "~/scripts"
        },
        "UmbracoMediaPath": {
          "type": "string",
          "description": "Gets or sets a value for the Umbraco media request path.\n            ",
          "default": "~/media"
        },
        "UmbracoMediaPhysicalRootPath": {
          "type": "string",
          "description": "Gets or sets a value for the physical Umbraco media root path (falls back to UmbracoMediaPath when\nempty).\n            "
        },
        "InstallMissingDatabase": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to install the database when it is missing.\n            ",
          "default": false
        },
        "DisableElectionForSingleServer": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to disable the election for a single server.\n            ",
          "default": false
        },
        "DatabaseFactoryServerVersion": {
          "type": "string",
          "description": "Gets or sets a value for the database factory server version.\n            "
        },
        "MainDomLock": {
          "type": "string",
          "description": "Gets or sets a value for the main dom lock.\n            "
        },
        "MainDomKeyDiscriminator": {
          "type": "string",
          "description": "Gets or sets a value to discriminate MainDom boundaries.\n\n    Generally the default should suffice but useful for advanced scenarios e.g. azure deployment slot based zero\n    downtime deployments.\n\n            "
        },
        "MainDomReleaseSignalPollingInterval": {
          "type": "integer",
          "description": "Gets or sets the duration (in milliseconds) for which the MainDomLock release signal polling task should sleep.\n            ",
          "format": "int32",
          "default": 2000
        },
        "Id": {
          "type": "string",
          "description": "Gets or sets the telemetry ID.\n            "
        },
        "NoNodesViewPath": {
          "type": "string",
          "description": "Gets or sets a value for the path to the no content view.\n            ",
          "default": "~/umbraco/UmbracoWebsite/NoNodes.cshtml"
        },
        "DatabaseServerRegistrar": {
          "description": "Gets or sets a value for the database server registrar settings.\n            ",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseServerRegistrarSettings"
            }
          ]
        },
        "DatabaseServerMessenger": {
          "description": "Gets or sets a value for the database server messenger settings.\n            ",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseServerMessengerSettings"
            }
          ]
        },
        "Smtp": {
          "description": "Gets or sets a value for the SMTP settings.\n            ",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/SmtpSettings"
            }
          ]
        },
        "SanitizeTinyMce": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether TinyMCE scripting sanitization should be applied.\n            ",
          "default": false
        },
        "DistributedLockingReadLockDefaultTimeout": {
          "type": "string",
          "description": "Gets or sets a value representing the maximum time to wait whilst attempting to obtain a distributed read lock.\n            ",
          "format": "duration",
          "default": "00:01:00"
        },
        "DistributedLockingWriteLockDefaultTimeout": {
          "type": "string",
          "description": "Gets or sets a value representing the maximum time to wait whilst attempting to obtain a distributed write lock.\n            ",
          "format": "duration",
          "default": "00:00:05"
        },
        "DistributedLockingMechanism": {
          "type": "string",
          "description": "Gets or sets a value representing the DistributedLockingMechanism to use."
        },
        "ForceCombineUrlPathLeftToRight": {
          "type": "boolean",
          "description": "Force url paths to be left to right, even when the culture has right to left text",
          "default": true,
          "x-example": "For the following hierarchy\n- Root (/ar)\n  - 1 (/ar/1)\n    - 2 (/ar/1/2)\n      - 3 (/ar/1/2/3)\n        - 3 (/ar/1/2/3/4)\nWhen forced\n- https://www.umbraco.com/ar/1/2/3/4\nwhen not\n- https://www.umbraco.com/ar/4/3/2/1"
        }
      }
    },
    "DatabaseServerRegistrarSettings": {
      "type": "object",
      "description": "Typed configuration options for database server registrar settings.\n            ",
      "properties": {
        "WaitTimeBetweenCalls": {
          "type": "string",
          "description": "Gets or sets a value for the amount of time to wait between calls to the database on the background thread.\n            ",
          "format": "duration",
          "default": "00:01:00"
        },
        "StaleServerTimeout": {
          "type": "string",
          "description": "Gets or sets a value for the time span to wait before considering a server stale, after it has last been accessed.\n            ",
          "format": "duration",
          "default": "00:02:00"
        }
      }
    },
    "DatabaseServerMessengerSettings": {
      "type": "object",
      "description": "Typed configuration options for database server messaging settings.\n            ",
      "properties": {
        "MaxProcessingInstructionCount": {
          "type": "integer",
          "description": "Gets or sets a value for the maximum number of instructions that can be processed at startup; otherwise the server\ncold-boots (rebuilds its caches).\n            ",
          "format": "int32",
          "default": 1000
        },
        "TimeToRetainInstructions": {
          "type": "string",
          "description": "Gets or sets a value for the time to keep instructions in the database; records older than this number will be\npruned.\n            ",
          "format": "duration",
          "default": "2.00:00:00"
        },
        "TimeBetweenSyncOperations": {
          "type": "string",
          "description": "Gets or sets a value for the time to wait between each sync operations.\n            ",
          "format": "duration",
          "default": "00:00:05"
        },
        "TimeBetweenPruneOperations": {
          "type": "string",
          "description": "Gets or sets a value for the time to wait between each prune operations.\n            ",
          "format": "duration",
          "default": "00:01:00"
        }
      }
    },
    "SmtpSettings": {
      "type": "object",
      "description": "Typed configuration options for SMTP settings.\n            ",
      "required": [
        "From"
      ],
      "properties": {
        "From": {
          "type": "string",
          "description": "Gets or sets a value for the SMTP from address to use for messages.\n            ",
          "format": "email",
          "minLength": 1
        },
        "Host": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets a value for the SMTP host.\n            "
        },
        "Port": {
          "type": "integer",
          "description": "Gets or sets a value for the SMTP port.\n            ",
          "format": "int32"
        },
        "SecureSocketOptions": {
          "description": "Gets or sets a value for the secure socket options.\n            ",
          "default": "Auto",
          "oneOf": [
            {
              "$ref": "#/definitions/SecureSocketOptions"
            }
          ]
        },
        "PickupDirectoryLocation": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets a value for the SMTP pick-up directory.\n            "
        },
        "DeliveryMethod": {
          "description": "Gets or sets a value for the SMTP delivery method.\n            ",
          "default": "Network",
          "oneOf": [
            {
              "$ref": "#/definitions/SmtpDeliveryMethod"
            }
          ]
        },
        "Username": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets a value for the SMTP user name.\n            "
        },
        "Password": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets a value for the SMTP password.\n            "
        }
      }
    },
    "SecureSocketOptions": {
      "type": "string",
      "description": "Matches MailKit.Security.SecureSocketOptions and defined locally to avoid having to take\na dependency on this external library into Umbraco.Core.\n            ",
      "x-enumNames": [
        "None",
        "Auto",
        "SslOnConnect",
        "StartTls",
        "StartTlsWhenAvailable"
      ],
      "enum": [
        "None",
        "Auto",
        "SslOnConnect",
        "StartTls",
        "StartTlsWhenAvailable"
      ]
    },
    "SmtpDeliveryMethod": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Network",
        "SpecifiedPickupDirectory",
        "PickupDirectoryFromIis"
      ],
      "enum": [
        "Network",
        "SpecifiedPickupDirectory",
        "PickupDirectoryFromIis"
      ]
    },
    "HealthChecksSettings": {
      "type": "object",
      "description": "Typed configuration options for healthchecks settings.\n            ",
      "properties": {
        "DisabledChecks": {
          "type": "array",
          "description": "Gets or sets a value for the collection of healthchecks that are disabled.\n            ",
          "items": {
            "$ref": "#/definitions/DisabledHealthCheckSettings"
          }
        },
        "Notification": {
          "description": "Gets or sets a value for the healthcheck notification settings.\n            ",
          "oneOf": [
            {
              "$ref": "#/definitions/HealthChecksNotificationSettings"
            }
          ]
        }
      }
    },
    "DisabledHealthCheckSettings": {
      "type": "object",
      "description": "Typed configuration options for disabled healthcheck settings.\n            ",
      "properties": {
        "Id": {
          "type": "string",
          "description": "Gets or sets a value for the healthcheck Id to disable.\n            ",
          "format": "guid"
        },
        "DisabledOn": {
          "type": "string",
          "description": "Gets or sets a value for the date the healthcheck was disabled.\n            ",
          "format": "date-time"
        },
        "DisabledBy": {
          "type": "integer",
          "description": "Gets or sets a value for Id of the user that disabled the healthcheck.\n            ",
          "format": "int32"
        }
      }
    },
    "HealthChecksNotificationSettings": {
      "type": "object",
      "description": "Typed configuration options for healthcheck notification settings.\n            ",
      "properties": {
        "Enabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether health check notifications are enabled.\n            ",
          "default": false
        },
        "FirstRunTime": {
          "type": "string",
          "description": "Gets or sets a value for the first run time of a healthcheck notification in crontab format.\n            "
        },
        "Period": {
          "type": "string",
          "description": "Gets or sets a value for the period of the healthcheck notification.\n            ",
          "format": "duration",
          "default": "1.00:00:00"
        },
        "NotificationMethods": {
          "type": "object",
          "description": "Gets or sets a value for the collection of health check notification methods.\n            ",
          "additionalProperties": {
            "$ref": "#/definitions/HealthChecksNotificationMethodSettings"
          }
        },
        "DisabledChecks": {
          "type": "array",
          "description": "Gets or sets a value for the collection of health checks that are disabled for notifications.\n            ",
          "items": {
            "$ref": "#/definitions/DisabledHealthCheckSettings"
          }
        }
      }
    },
    "HealthChecksNotificationMethodSettings": {
      "type": "object",
      "description": "Typed configuration options for healthcheck notification method settings.\n            ",
      "properties": {
        "Enabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the health check notification method is enabled.\n            ",
          "default": false
        },
        "Verbosity": {
          "description": "Gets or sets a value for the health check notifications reporting verbosity.\n            ",
          "default": "Summary",
          "oneOf": [
            {
              "$ref": "#/definitions/HealthCheckNotificationVerbosity"
            }
          ]
        },
        "FailureOnly": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the health check notifications should occur on failures only.\n            ",
          "default": false
        },
        "Settings": {
          "type": "object",
          "description": "Gets or sets a value providing provider specific settings for the health check notification method.\n            ",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "HealthCheckNotificationVerbosity": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Summary",
        "Detailed"
      ],
      "enum": [
        "Summary",
        "Detailed"
      ]
    },
    "HostingSettings": {
      "type": "object",
      "description": "Typed configuration options for hosting settings.\n            ",
      "properties": {
        "ApplicationVirtualPath": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets a value for the application virtual path.\n            "
        },
        "LocalTempStorageLocation": {
          "description": "Gets or sets a value for the location of temporary files.\n            ",
          "default": "Default",
          "oneOf": [
            {
              "$ref": "#/definitions/LocalTempStorage"
            }
          ]
        },
        "Debug": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether umbraco is running in [debug mode].\n            ",
          "default": false
        },
        "SiteName": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets a value specifying the name of the site.\n            "
        }
      }
    },
    "LocalTempStorage": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Unknown",
        "Default",
        "EnvironmentTemp"
      ],
      "enum": [
        "Unknown",
        "Default",
        "EnvironmentTemp"
      ]
    },
    "ImagingSettings": {
      "type": "object",
      "description": "Typed configuration options for imaging settings.\n            ",
      "properties": {
        "Cache": {
          "description": "Gets or sets a value for imaging cache settings.\n            ",
          "oneOf": [
            {
              "$ref": "#/definitions/ImagingCacheSettings"
            }
          ]
        },
        "Resize": {
          "description": "Gets or sets a value for imaging resize settings.\n            ",
          "oneOf": [
            {
              "$ref": "#/definitions/ImagingResizeSettings"
            }
          ]
        }
      }
    },
    "ImagingCacheSettings": {
      "type": "object",
      "description": "Typed configuration options for image cache settings.\n            ",
      "properties": {
        "BrowserMaxAge": {
          "type": "string",
          "description": "Gets or sets a value for the browser image cache maximum age.\n            ",
          "format": "duration",
          "default": "7.00:00:00"
        },
        "CacheMaxAge": {
          "type": "string",
          "description": "Gets or sets a value for the image cache maximum age.\n            ",
          "format": "duration",
          "default": "365.00:00:00"
        },
        "CacheHashLength": {
          "type": "integer",
          "description": "Gets or sets a value for the image cache hash length.\n            ",
          "default": 12
        },
        "CacheFolderDepth": {
          "type": "integer",
          "description": "Gets or sets a value for the image cache folder depth.\n            ",
          "default": 8
        },
        "CacheFolder": {
          "type": "string",
          "description": "Gets or sets a value for the image cache folder.\n            ",
          "default": "~/umbraco/Data/TEMP/MediaCache"
        }
      }
    },
    "ImagingResizeSettings": {
      "type": "object",
      "description": "Typed configuration options for image resize settings.\n            ",
      "properties": {
        "MaxWidth": {
          "type": "integer",
          "description": "Gets or sets a value for the maximim resize width.\n            ",
          "format": "int32",
          "default": 5000
        },
        "MaxHeight": {
          "type": "integer",
          "description": "Gets or sets a value for the maximim resize height.\n            ",
          "format": "int32",
          "default": 5000
        }
      }
    },
    "IndexCreatorSettings": {
      "type": "object",
      "description": "Typed configuration options for index creator settings.\n            ",
      "properties": {
        "LuceneDirectoryFactory": {
          "description": "Gets or sets a value for lucene directory factory type.\n            ",
          "oneOf": [
            {
              "$ref": "#/definitions/LuceneDirectoryFactory"
            }
          ]
        }
      }
    },
    "LuceneDirectoryFactory": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Default",
        "SyncedTempFileSystemDirectoryFactory",
        "TempFileSystemDirectoryFactory"
      ],
      "enum": [
        "Default",
        "SyncedTempFileSystemDirectoryFactory",
        "TempFileSystemDirectoryFactory"
      ]
    },
    "KeepAliveSettings": {
      "type": "object",
      "description": "Typed configuration options for keep alive settings.\n            ",
      "properties": {
        "DisableKeepAliveTask": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the keep alive task is disabled.\n            ",
          "default": false
        },
        "KeepAlivePingUrl": {
          "type": "string",
          "description": "Gets or sets a value for the keep alive ping URL.\n            ",
          "default": "~/api/keepalive/ping"
        }
      }
    },
    "LoggingSettings": {
      "type": "object",
      "description": "Typed configuration options for logging settings.\n            ",
      "properties": {
        "MaxLogAge": {
          "type": "string",
          "description": "Gets or sets a value for the maximum age of a log file.\n            ",
          "format": "duration",
          "default": "1.00:00:00"
        }
      }
    },
    "NuCacheSettings": {
      "type": "object",
      "description": "Typed configuration options for NuCache settings.\n            ",
      "properties": {
        "BTreeBlockSize": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Gets or sets a value defining the BTree block size.\n            ",
          "format": "int32"
        },
        "NuCacheSerializerType": {
          "description": "The serializer type that nucache uses to persist documents in the database.\n            ",
          "default": "MessagePack",
          "oneOf": [
            {
              "$ref": "#/definitions/NuCacheSerializerType"
            }
          ]
        },
        "SqlPageSize": {
          "type": "integer",
          "description": "The paging size to use for nucache SQL queries.\n            ",
          "format": "int32",
          "default": 1000
        },
        "KitBatchSize": {
          "type": "integer",
          "description": "The size to use for nucache Kit batches.  Higher value means more content loaded into memory at a time.\n            ",
          "format": "int32",
          "default": 1
        },
        "UnPublishedContentCompression": {
          "type": "boolean"
        }
      }
    },
    "NuCacheSerializerType": {
      "type": "string",
      "description": "The serializer type that nucache uses to persist documents in the database.\n            ",
      "x-enumNames": [
        "MessagePack",
        "JSON"
      ],
      "enum": [
        "MessagePack",
        "JSON"
      ]
    },
    "RequestHandlerSettings": {
      "type": "object",
      "description": "Typed configuration options for request handler settings.\n            ",
      "properties": {
        "AddTrailingSlash": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to add a trailing slash to URLs.\n            ",
          "default": true
        },
        "ConvertUrlsToAscii": {
          "type": "string",
          "description": "Gets or sets a value indicating whether to convert URLs to ASCII (valid values: \"true\", \"try\" or \"false\").\n            ",
          "default": "try"
        },
        "EnableDefaultCharReplacements": {
          "type": "boolean",
          "description": "Disable all default character replacements\n            ",
          "default": true
        },
        "UserDefinedCharCollection": {
          "type": [
            "array",
            "null"
          ],
          "description": "Add additional character replacements, or override defaults\n            ",
          "items": {
            "$ref": "#/definitions/CharItem"
          }
        }
      }
    },
    "CharItem": {
      "type": "object",
      "properties": {
        "Char": {
          "type": "string",
          "description": "The character to replace\n            "
        },
        "Replacement": {
          "type": "string",
          "description": "The replacement character\n            "
        }
      }
    },
    "RuntimeSettings": {
      "type": "object",
      "description": "Typed configuration options for runtime settings.",
      "properties": {
        "Mode": {
          "description": "Gets or sets the runtime mode.",
          "default": "BackofficeDevelopment",
          "oneOf": [
            {
              "$ref": "#/definitions/RuntimeMode"
            }
          ]
        },
        "MaxQueryStringLength": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Gets or sets a value for the maximum query string length.",
          "format": "int32"
        },
        "MaxRequestLength": {
          "type": [
            "integer",
            "null"
          ],
          "description": "Gets or sets a value for the maximum request length in kb.\n            ",
          "format": "int32"
        }
      }
    },
    "RuntimeMode": {
      "type": "string",
      "description": "Represents the configured Umbraco runtime mode.",
      "x-enumNames": [
        "BackofficeDevelopment",
        "Development",
        "Production"
      ],
      "enum": [
        "BackofficeDevelopment",
        "Development",
        "Production"
      ]
    },
    "SecuritySettings": {
      "type": "object",
      "description": "Typed configuration options for security settings.\n            ",
      "properties": {
        "KeepUserLoggedIn": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to keep the user logged in.\n            ",
          "default": false
        },
        "HideDisabledUsersInBackOffice": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to hide disabled users in the back-office.\n            ",
          "default": false
        },
        "AllowPasswordReset": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to allow user password reset.\n            ",
          "default": true
        },
        "AuthCookieName": {
          "type": "string",
          "description": "Gets or sets a value for the authorization cookie name.\n            ",
          "default": "UMB_UCONTEXT"
        },
        "AuthCookieDomain": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets a value for the authorization cookie domain.\n            "
        },
        "UsernameIsEmail": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the user's email address is to be considered as their username.\n            "
        },
        "AllowedUserNameCharacters": {
          "type": "string",
          "description": "Gets or sets the set of allowed characters for a username\n            ",
          "default": "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._@+\\"
        },
        "UserPassword": {
          "description": "Gets or sets a value for the user password settings.\n            ",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/UserPasswordConfigurationSettings"
            }
          ]
        },
        "MemberPassword": {
          "description": "Gets or sets a value for the member password settings.\n            ",
          "oneOf": [
            {
              "type": "null"
            },
            {
              "$ref": "#/definitions/MemberPasswordConfigurationSettings"
            }
          ]
        },
        "MemberBypassTwoFactorForExternalLogins": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to bypass the two factor requirement in Umbraco when using external login\nfor members. Thereby rely on the External login and potential 2FA at that provider.\n            ",
          "default": true
        },
        "UserBypassTwoFactorForExternalLogins": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to bypass the two factor requirement in Umbraco when using external login\nfor users. Thereby rely on the External login and potential 2FA at that provider.\n            ",
          "default": true
        }
      }
    },
    "UserPasswordConfigurationSettings": {
      "type": "object",
      "description": "Typed configuration options for user password settings.\n            ",
      "properties": {
        "RequiredLength": {
          "type": "integer",
          "description": "Gets a value for the minimum required length for the password.\n            ",
          "format": "int32",
          "default": 10
        },
        "RequireNonLetterOrDigit": {
          "type": "boolean",
          "description": "Gets a value indicating whether at least one non-letter or digit is required for the password.\n            ",
          "default": false
        },
        "RequireDigit": {
          "type": "boolean",
          "description": "Gets a value indicating whether at least one digit is required for the password.\n            ",
          "default": false
        },
        "RequireLowercase": {
          "type": "boolean",
          "description": "Gets a value indicating whether at least one lower-case character is required for the password.\n            ",
          "default": false
        },
        "RequireUppercase": {
          "type": "boolean",
          "description": "Gets a value indicating whether at least one upper-case character is required for the password.\n            ",
          "default": false
        },
        "HashAlgorithmType": {
          "type": "string",
          "description": "Gets a value for the password hash algorithm type.\n            ",
          "default": "PBKDF2.ASPNETCORE.V3"
        },
        "MaxFailedAccessAttemptsBeforeLockout": {
          "type": "integer",
          "description": "Gets a value for the maximum failed access attempts before lockout.\n            ",
          "format": "int32",
          "default": 5
        }
      }
    },
    "MemberPasswordConfigurationSettings": {
      "type": "object",
      "description": "Typed configuration options for member password settings.\n            ",
      "properties": {
        "RequiredLength": {
          "type": "integer",
          "description": "Gets a value for the minimum required length for the password.\n            ",
          "format": "int32",
          "default": 10
        },
        "RequireNonLetterOrDigit": {
          "type": "boolean",
          "description": "Gets a value indicating whether at least one non-letter or digit is required for the password.\n            ",
          "default": false
        },
        "RequireDigit": {
          "type": "boolean",
          "description": "Gets a value indicating whether at least one digit is required for the password.\n            ",
          "default": false
        },
        "RequireLowercase": {
          "type": "boolean",
          "description": "Gets a value indicating whether at least one lower-case character is required for the password.\n            ",
          "default": false
        },
        "RequireUppercase": {
          "type": "boolean",
          "description": "Gets a value indicating whether at least one upper-case character is required for the password.\n            ",
          "default": false
        },
        "HashAlgorithmType": {
          "type": "string",
          "description": "Gets a value for the password hash algorithm type.\n            ",
          "default": "PBKDF2.ASPNETCORE.V3"
        },
        "MaxFailedAccessAttemptsBeforeLockout": {
          "type": "integer",
          "description": "Gets a value for the maximum failed access attempts before lockout.\n            ",
          "format": "int32",
          "default": 5
        }
      }
    },
    "TourSettings": {
      "type": "object",
      "description": "Typed configuration options for tour settings.\n            ",
      "properties": {
        "EnableTours": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether back-office tours are enabled.\n            ",
          "default": true
        }
      }
    },
    "TypeFinderSettings": {
      "type": "object",
      "description": "Typed configuration options for type finder settings.\n            ",
      "required": [
        "AssembliesAcceptingLoadExceptions"
      ],
      "properties": {
        "AssembliesAcceptingLoadExceptions": {
          "type": "string",
          "description": "Gets or sets a value for the assemblies that accept load exceptions during type finder operations.\n            ",
          "minLength": 1
        },
        "AdditionalEntryAssemblies": {
          "type": [
            "array",
            "null"
          ],
          "description": "By default the entry assemblies for scanning plugin types is the Umbraco DLLs. If you require\nscanning for plugins based on different root referenced assemblies you can add the assembly name to this list.\n            ",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WebRoutingSettings": {
      "type": "object",
      "description": "Typed configuration options for web routing settings.\n            ",
      "properties": {
        "TryMatchingEndpointsForAllPages": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to check if any routed endpoints match a front-end request before\nthe Umbraco dynamic router tries to map the request to an Umbraco content item.\n            ",
          "default": false
        },
        "TrySkipIisCustomErrors": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether IIS custom errors should be skipped.\n            ",
          "default": false
        },
        "InternalRedirectPreservesTemplate": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether an internal redirect should preserve the template.\n            ",
          "default": false
        },
        "DisableAlternativeTemplates": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the use of alternative templates are disabled.\n            ",
          "default": false
        },
        "ValidateAlternativeTemplates": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether the use of alternative templates should be validated.\n            ",
          "default": false
        },
        "DisableFindContentByIdPath": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether find content ID by path is disabled.\n            ",
          "default": false
        },
        "DisableRedirectUrlTracking": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether redirect URL tracking is disabled.\n            ",
          "default": false
        },
        "UrlProviderMode": {
          "description": "Gets or sets a value for the URL provider mode (UrlMode).\n            ",
          "default": "Auto",
          "oneOf": [
            {
              "$ref": "#/definitions/UrlMode"
            }
          ]
        },
        "UmbracoApplicationUrl": {
          "type": "string",
          "description": "Gets or sets a value for the Umbraco application URL.\n            "
        }
      }
    },
    "UrlMode": {
      "type": "string",
      "description": "Specifies the type of URLs that the URL provider should produce, Auto is the default.\n            ",
      "x-enumNames": [
        "Default",
        "Relative",
        "Absolute",
        "Auto"
      ],
      "enum": [
        "Default",
        "Relative",
        "Absolute",
        "Auto"
      ]
    },
    "UmbracoPluginSettings": {
      "type": "object",
      "description": "Typed configuration options for the plugins.\n            ",
      "properties": {
        "BrowsableFileExtensions": {
          "type": "array",
          "description": "Gets or sets the allowed file extensions (including the period \".\") that should be accessible from the browser.\n            ",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UnattendedSettings": {
      "type": "object",
      "description": "Typed configuration options for unattended settings.\n            ",
      "properties": {
        "InstallUnattended": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether unattended installs are enabled.\n            ",
          "default": false
        },
        "UpgradeUnattended": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether unattended upgrades are enabled.\n            ",
          "default": false
        },
        "PackageMigrationsUnattended": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether unattended package migrations are enabled.\n            "
        },
        "UnattendedUserName": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets a value to use for creating a user with a name for Unattended Installs\n            "
        },
        "UnattendedUserEmail": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets a value to use for creating a user with an email for Unattended Installs\n            ",
          "format": "email"
        },
        "UnattendedUserPassword": {
          "type": [
            "null",
            "string"
          ],
          "description": "Gets or sets a value to use for creating a user with a password for Unattended Installs\n            "
        }
      }
    },
    "RichTextEditorSettings": {
      "type": "object",
      "properties": {
        "Commands": {
          "type": "array",
          "description": "HTML RichText Editor TinyMCE Commands\n            ",
          "items": {
            "$ref": "#/definitions/RichTextEditorCommand"
          }
        },
        "Plugins": {
          "type": "array",
          "description": "HTML RichText Editor TinyMCE Plugins\n            ",
          "items": {
            "type": "string"
          }
        },
        "CustomConfig": {
          "type": "object",
          "description": "HTML RichText Editor TinyMCE Custom Config\n            ",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ValidElements": {
          "type": "string",
          "default": "+a[id|style|rel|data-id|data-udi|rev|charset|hreflang|dir|lang|tabindex|accesskey|type|name|href|target|title|class|onfocus|onblur|onclick|ondblclick|onmousedown|onmouseup|onmouseover|onmousemove|onmouseout|onkeypress|onkeydown|onkeyup],-strong/-b[class|style],-em/-i[class|style],-strike[class|style],-u[class|style],#p[id|style|dir|class|align],-ol[class|reversed|start|style|type],-ul[class|style],-li[class|style],br[class],img[id|dir|lang|longdesc|usemap|style|class|src|onmouseover|onmouseout|border|alt=|title|hspace|vspace|width|height|align|umbracoorgwidth|umbracoorgheight|onresize|onresizestart|onresizeend|rel|data-id],-sub[style|class],-sup[style|class],-blockquote[dir|style|class],-table[border=0|cellspacing|cellpadding|width|height|class|align|summary|style|dir|id|lang|bgcolor|background|bordercolor],-tr[id|lang|dir|class|rowspan|width|height|align|valign|style|bgcolor|background|bordercolor],tbody[id|class],thead[id|class],tfoot[id|class],#td[id|lang|dir|class|colspan|rowspan|width|height|align|valign|style|bgcolor|background|bordercolor|scope],-th[id|lang|dir|class|colspan|rowspan|width|height|align|valign|style|scope],caption[id|lang|dir|class|style],-div[id|dir|class|align|style],-span[class|align|style],-pre[class|align|style],address[class|align|style],-h1[id|dir|class|align|style],-h2[id|dir|class|align|style],-h3[id|dir|class|align|style],-h4[id|dir|class|align|style],-h5[id|dir|class|align|style],-h6[id|style|dir|class|align|style],hr[class|style],small[class|style],dd[id|class|title|style|dir|lang],dl[id|class|title|style|dir|lang],dt[id|class|title|style|dir|lang],object[class|id|width|height|codebase|*],param[name|value|_value|class],embed[type|width|height|src|class|*],map[name|class],area[shape|coords|href|alt|target|class],bdo[class],button[class],iframe[*],figure,figcaption,video[*],audio[*],picture[*],source[*],canvas[*]"
        },
        "InvalidElements": {
          "type": "string",
          "description": "Invalid HTML elements for RichText Editor\n            ",
          "default": "font"
        }
      }
    },
    "RichTextEditorCommand": {
      "type": "object",
      "required": [
        "Alias",
        "Name",
        "Mode"
      ],
      "properties": {
        "Alias": {
          "type": "string",
          "minLength": 1
        },
        "Name": {
          "type": "string",
          "minLength": 1
        },
        "Mode": {
          "$ref": "#/definitions/RichTextEditorCommandMode"
        }
      }
    },
    "RichTextEditorCommandMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Insert",
        "Selection",
        "All"
      ],
      "enum": [
        "Insert",
        "Selection",
        "All"
      ]
    },
    "RuntimeMinificationSettings": {
      "type": "object",
      "properties": {
        "UseInMemoryCache": {
          "type": "boolean",
          "description": "Use in memory cache\n            ",
          "default": false
        },
        "CacheBuster": {
          "description": "The cache buster type to use\n            ",
          "default": "Version",
          "oneOf": [
            {
              "$ref": "#/definitions/RuntimeMinificationCacheBuster"
            }
          ]
        },
        "Version": {
          "type": [
            "null",
            "string"
          ],
          "description": "The unique version string used if CacheBuster is 'Version'.\n            "
        }
      }
    },
    "RuntimeMinificationCacheBuster": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "Version",
        "AppDomain",
        "Timestamp"
      ],
      "enum": [
        "Version",
        "AppDomain",
        "Timestamp"
      ]
    },
    "BasicAuthSettings": {
      "type": "object",
      "description": "Typed configuration options for basic authentication settings.",
      "properties": {
        "Enabled": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether to keep the user logged in.",
          "default": false
        },
        "AllowedIPs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SharedSecret": {
          "$ref": "#/definitions/SharedSecret"
        },
        "RedirectToLoginPage": {
          "type": "boolean"
        }
      }
    },
    "SharedSecret": {
      "type": "object",
      "properties": {
        "HeaderName": {
          "type": [
            "null",
            "string"
          ],
          "default": "X-Authentication-Shared-Secret"
        },
        "Value": {
          "type": [
            "null",
            "string"
          ]
        }
      }
    },
    "PackageMigrationSettings": {
      "type": "object",
      "description": "Typed configuration options for package migration settings.\n            ",
      "properties": {
        "RunSchemaAndContentMigrations": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether package migration steps that install schema and content should run.\n            ",
          "default": true
        },
        "AllowComponentOverrideOfRunSchemaAndContentMigrations": {
          "type": "boolean",
          "description": "Gets or sets a value indicating whether components can override the configured value for\nRunSchemaAndContentMigrations.\n            ",
          "default": true
        }
      }
    },
    "LegacyPasswordMigrationSettings": {
      "type": "object",
      "description": "Typed configuration options for legacy machine key settings used for migration of members from a v8 solution.\n            ",
      "properties": {
        "MachineKeyDecryptionKey": {
          "type": "string",
          "description": "Gets or sets the decryption hex-formatted string key found in legacy web.config machineKey configuration-element.\n            ",
          "default": ""
        }
      }
    },
    "ContentDashboardSettings": {
      "type": "object",
      "description": "Typed configuration options for content dashboard settings.\n            ",
      "properties": {
        "AllowContentDashboardAccessToAllUsers": {
          "type": "boolean",
          "description": "Gets a value indicating whether the content dashboard should be available to all users.\n            "
        },
        "ContentDashboardPath": {
          "type": "string",
          "description": "Gets the path to use when constructing the URL for retrieving data for the content dashboard.\n            ",
          "default": "cms"
        },
        "ContentDashboardUrlAllowlist": {
          "type": [
            "array",
            "null"
          ],
          "description": "Gets the allowed addresses to retrieve data for the content dashboard.\n            ",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "HelpPageSettings": {
      "type": "object",
      "properties": {
        "HelpPageUrlAllowList": {
          "type": [
            "array",
            "null"
          ],
          "description": "Gets or sets the allowed addresses to retrieve data for the content dashboard.\n            ",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InstallDefaultDataSettings": {
      "type": "object",
      "description": "Typed configuration options for installation of default data.\n            ",
      "properties": {
        "InstallData": {
          "description": "Gets or sets a value indicating whether to create default data on installation.\n            ",
          "oneOf": [
            {
              "$ref": "#/definitions/InstallDefaultDataOption"
            }
          ]
        },
        "Values": {
          "type": "array",
          "description": "Gets or sets a value indicating which default data (languages, data types, etc.) should be created when\nInstallData is\nset to Values or ExceptValues.\n            ",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InstallDefaultDataOption": {
      "type": "string",
      "description": "An enumeration of options available for control over installation of default Umbraco data.\n            ",
      "x-enumNames": [
        "None",
        "Values",
        "ExceptValues",
        "All"
      ],
      "enum": [
        "None",
        "Values",
        "ExceptValues",
        "All"
      ]
    },
    "DataTypesSettings": {
      "type": "object",
      "properties": {
        "CanBeChanged": {
          "description": "Gets or sets a value indicating if data types can be changed after they've been used.",
          "default": "True",
          "oneOf": [
            {
              "$ref": "#/definitions/DataTypeChangeMode"
            }
          ]
        }
      }
    },
    "DataTypeChangeMode": {
      "type": "string",
      "description": "",
      "x-enumNames": [
        "True",
        "False",
        "FalseWithHelpText"
      ],
      "enum": [
        "True",
        "False",
        "FalseWithHelpText"
      ]
    },
    "MarketplaceSettings": {
      "type": "object",
      "description": "Configuration options for the Marketplace.",
      "properties": {
        "AdditionalParameters": {
          "type": "object",
          "description": "Gets or sets the additional parameters that are sent to the Marketplace.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  }
}