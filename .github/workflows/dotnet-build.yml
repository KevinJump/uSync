name: dotnet core build

on:
  push:
    branches: [v14/dev]
  pull_request:
    branches: [v14/dev]

env:
  config: Release
  out_folder: ./build-out/

jobs:
  version:
    runs-on: windows-latest
    outputs:
      version_string: ${{ steps.gitversion.outputs.fullSemVer }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"

      - name: Determine Version with GitVersion (MSBuild in Proj will do this)
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
          configFilePath: ./GitVersion.yml

      - name: Display version
        run: |
          echo "Full Version: ${{ steps.gitversion.outputs.fullSemVer }}"

  build-project:
    runs-on: windows-latest

    needs: version

    env:
      solution_name: ./uSyncBuild.sln
      test_project: ./uSync.Tests/uSync.tests.csproj
      schema_gen_project: ./uSync.SchemaGenerator/uSync.SchemaGenerator.csproj

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install .Net core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: restore
        run: dotnet restore ${{ env.solution_name}}

      - name: build
        run: dotnet build ${{ env.solution_name }} -c ${{ env.config }} -p:ContinuousIntegrationBuild=true

      - name: test
        run: dotnet test ${{ env.solution_name }}

      - name: Generate AppSettings Schema
        run: dotnet run -c ${{env.Config}} --project ${{ env.schema_gen_project}}

  package-up:
    runs-on: windows-latest

    needs: [build-project, version]

    strategy:
      matrix:
        package:
          - uSync.Core
          - uSync.Backoffice
          - uSync.Backoffice.Management.Api
          - uSync.Backoffice.Management.Client
          - uSync.Backoffice.Targets
          - uSync.Community.Contrib
          - uSync.Community.DataTypeSerializers

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: version
        run: |
          echo "Version: ${{ needs.version.outputs.version_string}}"

      - name: package ${{ matrix.package }}
        run: dotnet pack ./${{ matrix.package }}/${{ matrix.package }}.csproj --no-restore -c ${{env.config}} --output ${{env.out_folder}} /p:version=${{ needs.version.outputs.version_string }}

      - name: Upload nuget file as build artifact
        uses: actions/upload-artifact@v2
        with:
          name: Nuget Build Output
          path: ${{env.OUT_FOLDER}}
